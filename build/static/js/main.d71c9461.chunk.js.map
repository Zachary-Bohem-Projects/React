{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","href","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d71c9461.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nfunction Button({ color , text, onClick}) {\r\n    return (\r\n        <button onClick={onClick} style ={{backgroundColor: color}} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'black',\r\n    text: 'Add'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nfunction Task( { task , onDelete, onToggle }) {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nfunction Tasks({ tasks , onDelete, onToggle }) {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\n\r\nfunction AddTask( { onAdd } ) {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        //pass form information up to event handler\r\n        onAdd({ text, day, reminder })\r\n        //reset form\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {Link} from 'react-router-dom'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaUnderline } from 'react-icons/fa'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <br/>\r\n            <a href=\"https://www.youtube.com/watch?v=w7ejDZ8SWv8\">Youtube Tutorial</a>\r\n            <br/>\r\n            <a href=\"https://github.com/bradtraversy/react-crash-2021/blob/master/src/components/Task.js\">Referenced Repository</a> \r\n            <br/>\r\n            <br/>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  //get data on page load\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n  //add task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n  }\n\n  //delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-type' : 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n    \n    setTasks(\n      tasks.map((task) => \n        task.id === id ? {...task, reminder: \n        data.reminder} : task\n      )\n    )\n  }\n\n  //toggle AddTask\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask) } showAdd={showAddTask} />\n        \n        <Route path='/' exact \n          render={(props) => (\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No Tasks to Show')}\n              </>\n            )\n          } \n        />\n\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}